#/usr/bin/python
# Author: Joris Witteman 2020
# This script takes module names and turns it into a header file usable for uPy 

import argparse

parser = argparse.ArgumentParser(description='Process some integers.')
parser.add_argument('modules', metavar='N', nargs='+',
                    help='list of modules')
parser.add_argument('-b', help='folder to store header file')

args = parser.parse_args()
modules = args.modules[0].split(" ")

consts = ""
strs = ""
for mod in list(dict.fromkeys(modules)):    #remove any duplicates
    if mod is not None and mod != "":
        consts += "extern const struct _mp_obj_module_t {}_module;\n".format(mod)
        strs += "{{MP_OBJ_NEW_QSTR(MP_QSTR_{0}), (mp_obj_t)&{0}_module }}, \\\n".format((mod))

f = open(args.b+"/mpconfigoverrides.h", "w")

f.write("""#pragma once
//This file is generated by mpconfigover_generator.py

{0}

#define MICROPY_CUSTOM_BUILTIN_MODULES \\
{1}
""".format(consts, strs))